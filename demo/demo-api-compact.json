{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "deprecated",
      "raml-shapes:schema": {
        "@id": "amf://id#2",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:string"
        },
        "shacl:name": "deprecated"
      }
    },
    {
      "@id": "amf://id#3",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "annotationTest",
      "raml-shapes:schema": {
        "@id": "amf://id#4",
        "@type": [
          "raml-shapes:NilShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "shacl:name": "annotationTest"
      }
    },
    {
      "@id": "amf://id#5",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "clearanceLevel",
      "raml-shapes:schema": {
        "@id": "amf://id#6",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "schema",
        "shacl:property": [
          {
            "@id": "amf://id#7",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#8",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#8/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "low"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "medium"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "high"
                  }
                }
              },
              "shacl:name": "level"
            },
            "shacl:minCount": 1,
            "shacl:name": "level",
            "shacl:path": {
              "@id": "data:level"
            }
          },
          {
            "@id": "amf://id#12",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#13",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "signature",
              "shacl:pattern": "^\\d{3}-\\w{12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "signature",
            "shacl:path": {
              "@id": "data:signature"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#14",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#15",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#17",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:gender": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISI"
            }
          },
          "data:image": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:tagline": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISI\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#18",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#19",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#20",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#21",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#22",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#23",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#24",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#25",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#26",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#27",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#28",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#29",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#30",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#31",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#32",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#33",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#34",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#35",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#36",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#37",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "amf_inline_type_4",
            "shacl:property": [
              {
                "@id": "amf://id#38",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#39",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#40",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#41",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#43",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#44",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#49",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": [
        {
          "@id": "amf://id#72",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#73",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\d3deef3rgrgf4r"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "200"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "schema-org:name": "example_0",
          "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\sd3deef3rgrgf4r\"\n"
        },
        {
          "@id": "amf://id#74",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#75",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W/\"686897696a7c876b7e\""
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "d697f5cea85011e680f576304dec7eb7"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Super product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "125"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#74/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#74",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#76"
            }
          },
          "schema-org:name": "Product",
          "shacl:raw": "\n                id: d697f5cea85011e680f576304dec7eb7\n                name: Super product\n                quantity: 125\n                unit: ml\n                upc: \"123456789101\"\n                available: true\n                etag: \"W/\\\"686897696a7c876b7e\\\"\"\n"
        },
        {
          "@id": "amf://id#77",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#78",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W/\"123456789\""
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123e4567e89b12d3a456426655440000"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "kg"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "223456789101"
              }
            }
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#77/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#77",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#76"
            }
          },
          "schema-org:name": "OtherProduct",
          "shacl:raw": "\n                id: 123e4567e89b12d3a456426655440000\n                name: Acme Product\n                quantity: 1\n                unit: kg\n                upc: \"223456789101\"\n                available: true\n                etag: \"W/\\\"123456789\\\"\"\n"
        }
      ],
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#50",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#51",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#52",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#53",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#18",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#19",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#54",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#55",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#56",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#57",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#58",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#59",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#60",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#61",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#62",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#63",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#64",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#65",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#66",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#67",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#68",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#69",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#70",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#71",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#82",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A response that is errored",
      "shacl:closed": false,
      "shacl:name": "ErrorResource",
      "shacl:property": [
        {
          "@id": "amf://id#86",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#87",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#89",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Indicate that the response is errored.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#88",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "shacl:defaultValueStr": "true",
            "shacl:name": "error"
          },
          "shacl:minCount": 1,
          "shacl:name": "error",
          "shacl:path": {
            "@id": "data:error"
          }
        },
        {
          "@id": "amf://id#91",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#92",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The error message associated with the error.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "message"
          },
          "shacl:minCount": 1,
          "shacl:name": "message",
          "shacl:path": {
            "@id": "data:message"
          }
        }
      ]
    },
    {
      "@id": "amf://id#97",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#98",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schema-org:name": "ResourceNotFound"
    },
    {
      "@id": "amf://id#100",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#101",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "schema-org:name": "UnauthorizedResponse"
    },
    {
      "@id": "amf://id#103",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#104",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:400": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                }
              }
            }
          }
        },
        "data:put": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15",
            "@type": "data:Object",
            "data:400": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19/scalar_20",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19/scalar_21",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_23",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_25",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_24",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/scalar_17",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                }
              }
            }
          }
        }
      },
      "schema-org:name": "RequestErrorResponse"
    },
    {
      "@id": "amf://id#16",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#106",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "The collection of <<resourcePathName>>."
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7",
                "@type": "data:Object",
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9",
                  "@type": "data:Object",
                  "data:items": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_13",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Contains a list of objects for this method."
                      }
                    },
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_14",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "<<resourceType>>"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_12",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_11",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "array"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_19",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_18",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_16",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/scalar_8",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
              }
            }
          },
          "data:400": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23",
                "@type": "data:Object",
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_24",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Invalid"
                  }
                },
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26",
                  "@type": "data:Object",
                  "data:error": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_31",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Indicate that the response is errored."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_30",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_29",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_28",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "boolean"
                      }
                    }
                  },
                  "data:message": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_34",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error message associated with the error."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_35",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_36",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_33",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_25",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/scalar_21",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
              }
            }
          }
        }
      },
      "doc:variable": [
        "resourceType",
        "resourcePathName"
      ],
      "schema-org:name": "trait"
    },
    {
      "@id": "amf://id#108",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#109",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "Use this to mark a resource that can be changed only by users with admin level."
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:headers": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
              "@type": "data:Object",
              "data:X-Amin-Resource": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                "@type": "data:Object",
                "data:default": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:description": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "This header is not set if the resource can be changed by non-admin users."
                  }
                },
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Admin resource mark header"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "boolean"
                  }
                }
              }
            }
          },
          "data:401": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
              }
            }
          }
        }
      },
      "schema-org:name": "trait"
    },
    {
      "@id": "amf://id#177",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Manager",
      "shacl:property": [
        {
          "@id": "amf://id#161",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#162",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "lastname"
          },
          "shacl:minCount": 1,
          "shacl:name": "lastname",
          "shacl:path": {
            "@id": "data:lastname"
          }
        },
        {
          "@id": "amf://id#163",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#164",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "firstname"
          },
          "shacl:minCount": 1,
          "shacl:name": "firstname",
          "shacl:path": {
            "@id": "data:firstname"
          }
        },
        {
          "@id": "amf://id#165",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#166",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "title?"
          },
          "shacl:minCount": 0,
          "shacl:name": "title",
          "shacl:path": {
            "@id": "data:title"
          }
        },
        {
          "@id": "amf://id#178",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#179",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#180",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#181",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#182",
                  "@type": "data:Object",
                  "data:firstname": {
                    "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Pawel"
                    }
                  },
                  "data:kind": {
                    "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Manager"
                    }
                  },
                  "data:lastname": {
                    "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Psztyc"
                    }
                  },
                  "data:title": {
                    "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Mr."
                    }
                  }
                },
                "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
              },
              "shacl:closed": false,
              "shacl:name": "Person",
              "shacl:property": [
                {
                  "@id": "amf://id#163",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#164",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "firstname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "firstname",
                  "shacl:path": {
                    "@id": "data:firstname"
                  }
                },
                {
                  "@id": "amf://id#161",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#162",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "lastname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "lastname",
                  "shacl:path": {
                    "@id": "data:lastname"
                  }
                },
                {
                  "@id": "amf://id#165",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#166",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "title?"
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "title",
                  "shacl:path": {
                    "@id": "data:title"
                  }
                },
                {
                  "@id": "amf://id#183",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#184",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "kind"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "kind",
                  "shacl:path": {
                    "@id": "data:kind"
                  }
                }
              ]
            }
          },
          "shacl:minCount": 1,
          "shacl:name": "reports",
          "shacl:path": {
            "@id": "data:reports"
          }
        },
        {
          "@id": "amf://id#188",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#189",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "Phone",
            "shacl:pattern": "^[0-9|-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "phone",
          "shacl:path": {
            "@id": "data:phone"
          }
        },
        {
          "@id": "amf://id#192",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#193",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#193/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#194",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "AcmeManager"
                }
              }
            },
            "shacl:name": "kind"
          },
          "shacl:minCount": 1,
          "shacl:name": "kind",
          "shacl:path": {
            "@id": "data:kind"
          }
        }
      ]
    },
    {
      "@id": "amf://id#176",
      "@type": [
        "raml-shapes:UnionShape",
        "shacl:Shape",
        "raml-shapes:Shape"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "amf://id#177",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "Manager",
          "shacl:property": [
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#178",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#179",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "raml-shapes:items": {
                  "@id": "amf://id#180",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#181",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#182",
                      "@type": "data:Object",
                      "data:firstname": {
                        "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Pawel"
                        }
                      },
                      "data:kind": {
                        "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Manager"
                        }
                      },
                      "data:lastname": {
                        "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Psztyc"
                        }
                      },
                      "data:title": {
                        "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Mr."
                        }
                      }
                    },
                    "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
                  },
                  "shacl:closed": false,
                  "shacl:name": "Person",
                  "shacl:property": [
                    {
                      "@id": "amf://id#163",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#164",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "firstname"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "firstname",
                      "shacl:path": {
                        "@id": "data:firstname"
                      }
                    },
                    {
                      "@id": "amf://id#161",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#162",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "lastname"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "lastname",
                      "shacl:path": {
                        "@id": "data:lastname"
                      }
                    },
                    {
                      "@id": "amf://id#165",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#166",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "title?"
                      },
                      "shacl:minCount": 0,
                      "shacl:name": "title",
                      "shacl:path": {
                        "@id": "data:title"
                      }
                    },
                    {
                      "@id": "amf://id#183",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#184",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "kind"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "kind",
                      "shacl:path": {
                        "@id": "data:kind"
                      }
                    }
                  ]
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "reports",
              "shacl:path": {
                "@id": "data:reports"
              }
            },
            {
              "@id": "amf://id#188",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#189",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "Phone",
                "shacl:pattern": "^[0-9|-]+$"
              },
              "shacl:minCount": 1,
              "shacl:name": "phone",
              "shacl:path": {
                "@id": "data:phone"
              }
            },
            {
              "@id": "amf://id#192",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#193",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#193/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#194",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "AcmeManager"
                    }
                  }
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        },
        {
          "@id": "amf://id#199",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "AlertableAdmin",
          "shacl:property": [
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#167",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#168",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#168/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#169",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "low"
                    }
                  },
                  "rdfs:_2": {
                    "@id": "amf://id#170",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "high"
                    }
                  }
                },
                "shacl:name": "clearanceLevel"
              },
              "shacl:minCount": 1,
              "shacl:name": "clearanceLevel",
              "shacl:path": {
                "@id": "data:clearanceLevel"
              }
            },
            {
              "@id": "amf://id#200",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#189",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "Phone",
                "shacl:pattern": "^[0-9|-]+$"
              },
              "shacl:minCount": 1,
              "shacl:name": "phone",
              "shacl:path": {
                "@id": "data:phone"
              }
            },
            {
              "@id": "amf://id#171",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#172",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#172/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#173",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "AcmeAdmin"
                    }
                  }
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        }
      ],
      "shacl:name": "Alertable"
    },
    {
      "@id": "amf://id#204",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "Represents an organization unit.",
      "shacl:closed": false,
      "shacl:name": "Org",
      "shacl:property": [
        {
          "@id": "amf://id#205",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#176",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#177",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": false,
                "shacl:name": "Manager",
                "shacl:property": [
                  {
                    "@id": "amf://id#161",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#162",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "lastname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "lastname",
                    "shacl:path": {
                      "@id": "data:lastname"
                    }
                  },
                  {
                    "@id": "amf://id#163",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#164",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "firstname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "firstname",
                    "shacl:path": {
                      "@id": "data:firstname"
                    }
                  },
                  {
                    "@id": "amf://id#165",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#166",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "title?"
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "title",
                    "shacl:path": {
                      "@id": "data:title"
                    }
                  },
                  {
                    "@id": "amf://id#178",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#179",
                      "@type": [
                        "raml-shapes:ArrayShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "raml-shapes:items": {
                        "@id": "amf://id#180",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#181",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#182",
                            "@type": "data:Object",
                            "data:firstname": {
                              "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Pawel"
                              }
                            },
                            "data:kind": {
                              "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Manager"
                              }
                            },
                            "data:lastname": {
                              "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Psztyc"
                              }
                            },
                            "data:title": {
                              "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Mr."
                              }
                            }
                          },
                          "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
                        },
                        "shacl:closed": false,
                        "shacl:name": "Person",
                        "shacl:property": [
                          {
                            "@id": "amf://id#163",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#164",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "firstname"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "firstname",
                            "shacl:path": {
                              "@id": "data:firstname"
                            }
                          },
                          {
                            "@id": "amf://id#161",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#162",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "lastname"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "lastname",
                            "shacl:path": {
                              "@id": "data:lastname"
                            }
                          },
                          {
                            "@id": "amf://id#165",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#166",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "title?"
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "title",
                            "shacl:path": {
                              "@id": "data:title"
                            }
                          },
                          {
                            "@id": "amf://id#183",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#184",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "kind"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "kind",
                            "shacl:path": {
                              "@id": "data:kind"
                            }
                          }
                        ]
                      }
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "reports",
                    "shacl:path": {
                      "@id": "data:reports"
                    }
                  },
                  {
                    "@id": "amf://id#188",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#189",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "Phone",
                      "shacl:pattern": "^[0-9|-]+$"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "phone",
                    "shacl:path": {
                      "@id": "data:phone"
                    }
                  },
                  {
                    "@id": "amf://id#192",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#193",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#193/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#194",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "AcmeManager"
                          }
                        }
                      },
                      "shacl:name": "kind"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "kind",
                    "shacl:path": {
                      "@id": "data:kind"
                    }
                  }
                ]
              },
              {
                "@id": "amf://id#199",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:closed": false,
                "shacl:name": "AlertableAdmin",
                "shacl:property": [
                  {
                    "@id": "amf://id#161",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#162",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "lastname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "lastname",
                    "shacl:path": {
                      "@id": "data:lastname"
                    }
                  },
                  {
                    "@id": "amf://id#163",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#164",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "firstname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "firstname",
                    "shacl:path": {
                      "@id": "data:firstname"
                    }
                  },
                  {
                    "@id": "amf://id#165",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#166",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "title?"
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "title",
                    "shacl:path": {
                      "@id": "data:title"
                    }
                  },
                  {
                    "@id": "amf://id#167",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#168",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#168/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#169",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "low"
                          }
                        },
                        "rdfs:_2": {
                          "@id": "amf://id#170",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "high"
                          }
                        }
                      },
                      "shacl:name": "clearanceLevel"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "clearanceLevel",
                    "shacl:path": {
                      "@id": "data:clearanceLevel"
                    }
                  },
                  {
                    "@id": "amf://id#200",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#189",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "Phone",
                      "shacl:pattern": "^[0-9|-]+$"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "phone",
                    "shacl:path": {
                      "@id": "data:phone"
                    }
                  },
                  {
                    "@id": "amf://id#171",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#172",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:in": {
                        "@id": "amf://id#172/list",
                        "@type": "rdfs:Seq",
                        "rdfs:_1": {
                          "@id": "amf://id#173",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "AcmeAdmin"
                          }
                        }
                      },
                      "shacl:name": "kind"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "kind",
                    "shacl:path": {
                      "@id": "data:kind"
                    }
                  }
                ]
              }
            ],
            "shacl:name": "Alertable"
          },
          "shacl:minCount": 1,
          "shacl:name": "onCall",
          "shacl:path": {
            "@id": "data:onCall"
          }
        },
        {
          "@id": "amf://id#206",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#177",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": false,
            "shacl:name": "Manager",
            "shacl:property": [
              {
                "@id": "amf://id#161",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#162",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "lastname"
                },
                "shacl:minCount": 1,
                "shacl:name": "lastname",
                "shacl:path": {
                  "@id": "data:lastname"
                }
              },
              {
                "@id": "amf://id#163",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#164",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "firstname"
                },
                "shacl:minCount": 1,
                "shacl:name": "firstname",
                "shacl:path": {
                  "@id": "data:firstname"
                }
              },
              {
                "@id": "amf://id#165",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#166",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "title?"
                },
                "shacl:minCount": 0,
                "shacl:name": "title",
                "shacl:path": {
                  "@id": "data:title"
                }
              },
              {
                "@id": "amf://id#178",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#179",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "raml-shapes:items": {
                    "@id": "amf://id#180",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#181",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#182",
                        "@type": "data:Object",
                        "data:firstname": {
                          "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Pawel"
                          }
                        },
                        "data:kind": {
                          "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Manager"
                          }
                        },
                        "data:lastname": {
                          "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Psztyc"
                          }
                        },
                        "data:title": {
                          "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Mr."
                          }
                        }
                      },
                      "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
                    },
                    "shacl:closed": false,
                    "shacl:name": "Person",
                    "shacl:property": [
                      {
                        "@id": "amf://id#163",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#164",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "firstname"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "firstname",
                        "shacl:path": {
                          "@id": "data:firstname"
                        }
                      },
                      {
                        "@id": "amf://id#161",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#162",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "lastname"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "lastname",
                        "shacl:path": {
                          "@id": "data:lastname"
                        }
                      },
                      {
                        "@id": "amf://id#165",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#166",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "title?"
                        },
                        "shacl:minCount": 0,
                        "shacl:name": "title",
                        "shacl:path": {
                          "@id": "data:title"
                        }
                      },
                      {
                        "@id": "amf://id#183",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#184",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "kind"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "kind",
                        "shacl:path": {
                          "@id": "data:kind"
                        }
                      }
                    ]
                  }
                },
                "shacl:minCount": 1,
                "shacl:name": "reports",
                "shacl:path": {
                  "@id": "data:reports"
                }
              },
              {
                "@id": "amf://id#188",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#189",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "Phone",
                  "shacl:pattern": "^[0-9|-]+$"
                },
                "shacl:minCount": 1,
                "shacl:name": "phone",
                "shacl:path": {
                  "@id": "data:phone"
                }
              },
              {
                "@id": "amf://id#192",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#193",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:in": {
                    "@id": "amf://id#193/list",
                    "@type": "rdfs:Seq",
                    "rdfs:_1": {
                      "@id": "amf://id#194",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "AcmeManager"
                      }
                    }
                  },
                  "shacl:name": "kind"
                },
                "shacl:minCount": 1,
                "shacl:name": "kind",
                "shacl:path": {
                  "@id": "data:kind"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "Head",
          "shacl:path": {
            "@id": "data:Head"
          }
        }
      ]
    },
    {
      "@id": "amf://id#338",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "amf://id#177",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "Manager",
        "shacl:property": [
          {
            "@id": "amf://id#161",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#162",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "lastname"
            },
            "shacl:minCount": 1,
            "shacl:name": "lastname",
            "shacl:path": {
              "@id": "data:lastname"
            }
          },
          {
            "@id": "amf://id#163",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#164",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "firstname"
            },
            "shacl:minCount": 1,
            "shacl:name": "firstname",
            "shacl:path": {
              "@id": "data:firstname"
            }
          },
          {
            "@id": "amf://id#165",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#166",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "title?"
            },
            "shacl:minCount": 0,
            "shacl:name": "title",
            "shacl:path": {
              "@id": "data:title"
            }
          },
          {
            "@id": "amf://id#178",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#179",
              "@type": [
                "raml-shapes:ArrayShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "raml-shapes:items": {
                "@id": "amf://id#180",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#181",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#182",
                    "@type": "data:Object",
                    "data:firstname": {
                      "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Pawel"
                      }
                    },
                    "data:kind": {
                      "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Manager"
                      }
                    },
                    "data:lastname": {
                      "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Psztyc"
                      }
                    },
                    "data:title": {
                      "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Mr."
                      }
                    }
                  },
                  "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
                },
                "shacl:closed": false,
                "shacl:name": "Person",
                "shacl:property": [
                  {
                    "@id": "amf://id#163",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#164",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "firstname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "firstname",
                    "shacl:path": {
                      "@id": "data:firstname"
                    }
                  },
                  {
                    "@id": "amf://id#161",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#162",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "lastname"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "lastname",
                    "shacl:path": {
                      "@id": "data:lastname"
                    }
                  },
                  {
                    "@id": "amf://id#165",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#166",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "title?"
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "title",
                    "shacl:path": {
                      "@id": "data:title"
                    }
                  },
                  {
                    "@id": "amf://id#183",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#184",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "kind"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "kind",
                    "shacl:path": {
                      "@id": "data:kind"
                    }
                  }
                ]
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "reports",
            "shacl:path": {
              "@id": "data:reports"
            }
          },
          {
            "@id": "amf://id#188",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#189",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "Phone",
              "shacl:pattern": "^[0-9|-]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "phone",
            "shacl:path": {
              "@id": "data:phone"
            }
          },
          {
            "@id": "amf://id#192",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#193",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#193/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#194",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "AcmeManager"
                  }
                }
              },
              "shacl:name": "kind"
            },
            "shacl:minCount": 1,
            "shacl:name": "kind",
            "shacl:path": {
              "@id": "data:kind"
            }
          }
        ]
      },
      "shacl:name": "amf_inline_type_1"
    },
    {
      "@id": "amf://id#122",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "An user message object.",
      "shacl:closed": false,
      "shacl:name": "amf_inline_type_2",
      "shacl:property": [
        {
          "@id": "amf://id#123",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#124",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Object representing sender of the message.",
            "shacl:closed": false,
            "shacl:name": "from",
            "shacl:property": [
              {
                "@id": "amf://id#125",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#126",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "User ID.",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "uid"
                },
                "shacl:minCount": 1,
                "shacl:name": "uid",
                "shacl:path": {
                  "@id": "data:uid"
                }
              },
              {
                "@id": "amf://id#127",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#128",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "User full name",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "name"
                },
                "shacl:minCount": 1,
                "shacl:name": "name",
                "shacl:path": {
                  "@id": "data:name"
                }
              },
              {
                "@id": "amf://id#129",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#130",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "User emaill address to be used to return the message. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address.",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "email"
                },
                "shacl:minCount": 1,
                "shacl:name": "email",
                "shacl:path": {
                  "@id": "data:email"
                }
              }
            ]
          },
          "shacl:minCount": 0,
          "shacl:name": "from",
          "shacl:path": {
            "@id": "data:from"
          }
        },
        {
          "@id": "amf://id#131",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#132",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Message body",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "message"
          },
          "shacl:minCount": 1,
          "shacl:name": "message",
          "shacl:path": {
            "@id": "data:message"
          }
        },
        {
          "@id": "amf://id#133",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#134",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Message sent timestamp as a Uxin timestamp.",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "timestamp"
          },
          "shacl:minCount": 1,
          "shacl:name": "timestamp",
          "shacl:path": {
            "@id": "data:timestamp"
          }
        },
        {
          "@id": "amf://id#135",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#136",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#137",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              }
            },
            "schema-org:description": "List of URLs to the attachments",
            "shacl:name": "attachements"
          },
          "shacl:minCount": 0,
          "shacl:name": "attachements",
          "shacl:path": {
            "@id": "data:attachements"
          }
        },
        {
          "@id": "amf://id#139",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#140",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "True if the message should be marked as an important.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "important"
          },
          "shacl:minCount": 0,
          "shacl:name": "important",
          "shacl:path": {
            "@id": "data:important"
          }
        }
      ]
    },
    {
      "@id": "amf://id#367",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "amf://id#14",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#15",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#17",
            "@type": "data:Object",
            "data:birthday": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "1983-10-20"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
              }
            },
            "data:gender": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "male"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "R34fg663H9KW9MMSKISI"
              }
            },
            "data:image": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
              "@type": "data:Object",
              "data:thumb": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                }
              },
              "data:url": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                }
              }
            },
            "data:language": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "en_GB"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Pawel Psztyc"
              }
            },
            "data:tagline": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Some text about me."
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc"
              }
            }
          },
          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISI\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n"
        },
        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
        "schema-org:name": "A person resource",
        "shacl:closed": false,
        "shacl:name": "AppPerson",
        "shacl:property": [
          {
            "@id": "amf://id#18",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#19",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#20",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#21",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The brief description (tagline) of this person.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "tagline"
            },
            "shacl:minCount": 1,
            "shacl:name": "tagline",
            "shacl:path": {
              "@id": "data:tagline"
            }
          },
          {
            "@id": "amf://id#22",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#23",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#24",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#25",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "John Smith"
                  }
                },
                "shacl:raw": "John Smith"
              },
              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name",
              "shacl:pattern": "^[0-9a-zA-Z ]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#26",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#27",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of this person's profile.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#28",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#29",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The user's preferred language for rendering.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "language"
            },
            "shacl:minCount": 1,
            "shacl:name": "language",
            "shacl:path": {
              "@id": "data:language"
            }
          },
          {
            "@id": "amf://id#30",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#31",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#32",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#33",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "birthday"
            },
            "shacl:minCount": 1,
            "shacl:name": "birthday",
            "shacl:path": {
              "@id": "data:birthday"
            }
          },
          {
            "@id": "amf://id#34",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#35",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#36",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#37",
                  "@type": "data:Object",
                  "data:thumb": {
                    "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                    }
                  },
                  "data:url": {
                    "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "https://domain.com/profile/pawel.psztyc/image"
                    }
                  }
                },
                "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
              },
              "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
              "shacl:closed": false,
              "shacl:name": "amf_inline_type_4",
              "shacl:property": [
                {
                  "@id": "amf://id#38",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#39",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "url"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "url",
                  "shacl:path": {
                    "@id": "data:url"
                  }
                },
                {
                  "@id": "amf://id#40",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#41",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                    "schema-org:name": "Thumbnail",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "thumb"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "thumb",
                  "shacl:path": {
                    "@id": "data:thumb"
                  }
                }
              ]
            },
            "shacl:minCount": 1,
            "shacl:name": "image",
            "shacl:path": {
              "@id": "data:image"
            }
          },
          {
            "@id": "amf://id#43",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#44",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "gender?"
            },
            "shacl:minCount": 0,
            "shacl:name": "gender",
            "shacl:path": {
              "@id": "data:gender"
            }
          }
        ]
      },
      "shacl:name": "amf_inline_type_3"
    },
    {
      "@id": "amf://id#35",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#36",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#37",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "amf_inline_type_4",
      "shacl:property": [
        {
          "@id": "amf://id#38",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#39",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#40",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#41",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    },
    {
      "@id": "amf://id#180",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#181",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#182",
          "@type": "data:Object",
          "data:firstname": {
            "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel"
            }
          },
          "data:kind": {
            "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Manager"
            }
          },
          "data:lastname": {
            "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Psztyc"
            }
          },
          "data:title": {
            "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Mr."
            }
          }
        },
        "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
      },
      "shacl:closed": false,
      "shacl:name": "Person",
      "shacl:property": [
        {
          "@id": "amf://id#163",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#164",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "firstname"
          },
          "shacl:minCount": 1,
          "shacl:name": "firstname",
          "shacl:path": {
            "@id": "data:firstname"
          }
        },
        {
          "@id": "amf://id#161",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#162",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "lastname"
          },
          "shacl:minCount": 1,
          "shacl:name": "lastname",
          "shacl:path": {
            "@id": "data:lastname"
          }
        },
        {
          "@id": "amf://id#165",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#166",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "title?"
          },
          "shacl:minCount": 0,
          "shacl:name": "title",
          "shacl:path": {
            "@id": "data:title"
          }
        },
        {
          "@id": "amf://id#183",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#184",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "kind"
          },
          "shacl:minCount": 1,
          "shacl:name": "kind",
          "shacl:path": {
            "@id": "data:kind"
          }
        }
      ]
    },
    {
      "@id": "amf://id#189",
      "@type": [
        "raml-shapes:ScalarShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": {
        "@id": "xsd:string"
      },
      "shacl:name": "Phone",
      "shacl:pattern": "^[0-9|-]+$"
    },
    {
      "@id": "amf://id#189",
      "@type": [
        "raml-shapes:ScalarShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:datatype": {
        "@id": "xsd:string"
      },
      "shacl:name": "Phone",
      "shacl:pattern": "^[0-9|-]+$"
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#213",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": [
      {
        "@id": "amf://id#214",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#83",
          "@type": [
            "doc:ParametrizedResourceType",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#103",
            "@type": [
              "doc:ResourceType",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#104",
              "@type": "data:Object",
              "data:get": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2",
                "@type": "data:Object",
                "data:responses": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3",
                  "@type": "data:Object",
                  "data:400": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_8",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_7/scalar_9",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ErrorResource"
                          }
                        }
                      },
                      "data:application%2Fxml": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_11",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:example": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_13",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/object_6/object_10/scalar_12",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_2/object_3/object_4/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                      }
                    }
                  }
                }
              },
              "data:put": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14",
                "@type": "data:Object",
                "data:responses": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15",
                  "@type": "data:Object",
                  "data:400": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19/scalar_20",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_19/scalar_21",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ErrorResource"
                          }
                        }
                      },
                      "data:application%2Fxml": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_23",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid request"
                          }
                        },
                        "data:example": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_25",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/object_18/object_22/scalar_24",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_14/object_15/object_16/scalar_17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                      }
                    }
                  }
                }
              }
            },
            "schema-org:name": "RequestErrorResponse"
          },
          "schema-org:name": "RequestErrorResponse"
        },
        "raml-http:path": "/people",
        "schema-org:name": "People",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#215",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "doc:extends": {
              "@id": "amf://id#216",
              "@type": [
                "doc:ParametrizedTrait",
                "doc:ParametrizedDeclaration",
                "doc:DomainElement"
              ],
              "doc:target": {
                "@id": "amf://id#16",
                "@type": [
                  "doc:Trait",
                  "doc:AbstractDeclaration",
                  "doc:DomainElement"
                ],
                "doc:dataNode": {
                  "@id": "amf://id#106",
                  "@type": "data:Object",
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "The collection of <<resourcePathName>>."
                    }
                  },
                  "data:responses": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
                    "@type": "data:Object",
                    "data:200": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
                      "@type": "data:Object",
                      "data:body": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6",
                        "@type": "data:Object",
                        "data:application%2Fjson": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7",
                          "@type": "data:Object",
                          "data:properties": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9",
                            "@type": "data:Object",
                            "data:items": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10",
                              "@type": "data:Object",
                              "data:description": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_13",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "Contains a list of objects for this method."
                                }
                              },
                              "data:items": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_14",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "<<resourceType>>"
                                }
                              },
                              "data:required": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_12",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "data:type": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_11",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "array"
                                }
                              }
                            },
                            "data:nextPageToken": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15",
                              "@type": "data:Object",
                              "data:description": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_19",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                                }
                              },
                              "data:example": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_18",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                                }
                              },
                              "data:required": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_17",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "data:type": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_16",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "string"
                                }
                              }
                            }
                          },
                          "data:type": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/scalar_8",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "object"
                            }
                          }
                        }
                      },
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
                        }
                      }
                    },
                    "data:400": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20",
                      "@type": "data:Object",
                      "data:body": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22",
                        "@type": "data:Object",
                        "data:application%2Fjson": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23",
                          "@type": "data:Object",
                          "data:displayName": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_24",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Invalid"
                            }
                          },
                          "data:properties": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26",
                            "@type": "data:Object",
                            "data:error": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27",
                              "@type": "data:Object",
                              "data:description": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_31",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "Indicate that the response is errored."
                                }
                              },
                              "data:example": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_30",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "data:required": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_29",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "data:type": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_28",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "boolean"
                                }
                              }
                            },
                            "data:message": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32",
                              "@type": "data:Object",
                              "data:description": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_34",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "The error message associated with the error."
                                }
                              },
                              "data:example": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_35",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                                }
                              },
                              "data:required": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_36",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "data:type": {
                                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_33",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "string"
                                }
                              }
                            }
                          },
                          "data:type": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_25",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "object"
                            }
                          }
                        }
                      },
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/scalar_21",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
                        }
                      }
                    }
                  }
                },
                "doc:variable": [
                  "resourceType",
                  "resourcePathName"
                ],
                "schema-org:name": "trait"
              },
              "doc:variable": {
                "@id": "amf://id#217",
                "@type": [
                  "doc:VariableValue",
                  "doc:DomainElement"
                ],
                "doc:name": "resourceType",
                "doc:value": {
                  "@id": "amf://id#218",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "AppPerson"
                  }
                }
              },
              "schema-org:name": "Paginated"
            },
            "schema-org:description": "The collection of people.",
            "schema-org:name": "List people",
            "hydra:method": "get",
            "hydra:returns": [
              {
                "@id": "amf://id#219",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#220",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#221",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A response that is errored",
                      "schema-org:name": "Invalid request",
                      "shacl:closed": false,
                      "shacl:name": "ErrorResource",
                      "shacl:property": [
                        {
                          "@id": "amf://id#222",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#223",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#224",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#225",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "shacl:raw": "true"
                            },
                            "schema-org:description": "Indicate that the response is errored.",
                            "shacl:datatype": {
                              "@id": "xsd:boolean"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#88",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:defaultValueStr": "true",
                            "shacl:name": "error"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "error",
                          "shacl:path": {
                            "@id": "data:error"
                          }
                        },
                        {
                          "@id": "amf://id#226",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#227",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#228",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#229",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                                }
                              },
                              "shacl:raw": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                            },
                            "schema-org:description": "The error message associated with the error.",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:name": "message"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "message",
                          "shacl:path": {
                            "@id": "data:message"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#231",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#232",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#233",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#233/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#233",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#234"
                          }
                        },
                        "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                      },
                      "schema-org:name": "Invalid request",
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema",
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                ],
                "schema-org:description": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data.",
                "schema-org:name": "400",
                "hydra:statusCode": "400"
              },
              {
                "@id": "amf://id#235",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": {
                  "@id": "amf://id#236",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#237",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:closed": false,
                    "shacl:name": "schema",
                    "shacl:property": [
                      {
                        "@id": "amf://id#238",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#239",
                          "@type": [
                            "raml-shapes:ArrayShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "raml-shapes:items": {
                            "@id": "amf://id#14/linked_1",
                            "@type": [
                              "shacl:NodeShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:link-label": "AppPerson",
                            "doc:link-target": {
                              "@id": "amf://id#14"
                            }
                          },
                          "schema-org:description": "Contains a list of objects for this method.",
                          "shacl:name": "items"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "items",
                        "shacl:path": {
                          "@id": "data:items"
                        }
                      },
                      {
                        "@id": "amf://id#240",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#241",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "doc:examples": {
                            "@id": "amf://id#242",
                            "@type": [
                              "doc:Example",
                              "doc:DomainElement"
                            ],
                            "doc:strict": true,
                            "doc:structuredValue": {
                              "@id": "amf://id#243",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                              }
                            },
                            "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                          },
                          "schema-org:description": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "nextPageToken"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "nextPageToken",
                        "shacl:path": {
                          "@id": "data:nextPageToken"
                        }
                      }
                    ]
                  }
                },
                "schema-org:description": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n",
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              }
            ]
          },
          {
            "@id": "amf://id#244",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "delete",
            "hydra:returns": {
              "@id": "amf://id#245",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "204",
              "hydra:statusCode": "204"
            }
          },
          {
            "@id": "amf://id#246",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:name": "Update a person",
            "hydra:method": "put",
            "hydra:returns": [
              {
                "@id": "amf://id#247",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "schema-org:name": "204",
                "hydra:statusCode": "204"
              },
              {
                "@id": "amf://id#248",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "amf://id#1": {
                  "@id": "amf://id#295",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "This response type is deprecated and soon will be replaced."
                  },
                  "doc:name": "deprecated"
                },
                "doc:customDomainProperties": {
                  "@id": "amf://id#1"
                },
                "raml-http:header": {
                  "@id": "amf://id#249",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "header",
                  "raml-http:paramName": "X-Frame-Options",
                  "raml-http:schema": {
                    "@id": "amf://id#250",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": [
                      {
                        "@id": "amf://id#251",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#252",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "DENY"
                          }
                        },
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#251/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#251",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#249"
                          }
                        },
                        "schema-org:name": "Deny",
                        "shacl:raw": "DENY"
                      },
                      {
                        "@id": "amf://id#253",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#254",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "SAMEORIGIN"
                          }
                        },
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#253/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#253",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#249"
                          }
                        },
                        "schema-org:name": "SameOrigin",
                        "shacl:raw": "SAMEORIGIN"
                      }
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:name": "X-Frame-Options",
                  "hydra:required": true
                },
                "raml-http:payload": [
                  {
                    "@id": "amf://id#255",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#256",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#257",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:reference-id": {
                          "@id": "amf://id#113"
                        },
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#258",
                          "@type": "data:Object",
                          "data:birthday": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_4",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "1983-10-20"
                            }
                          },
                          "data:etag": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_12",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
                            }
                          },
                          "data:gender": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_5",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "male"
                            }
                          },
                          "data:id": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_2",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "R34fg663H9KW9MMSKISI"
                            }
                          },
                          "data:image": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/object_7",
                            "@type": "data:Object",
                            "data:thumb": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/object_7/scalar_9",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                              }
                            },
                            "data:url": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/object_7/scalar_8",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "https://domain.com/profile/pawel.psztyc/image"
                              }
                            }
                          },
                          "data:language": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_11",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "en_GB"
                            }
                          },
                          "data:name": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_3",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Pawel Psztyc"
                            }
                          },
                          "data:tagline": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_10",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Some text about me."
                            }
                          },
                          "data:url": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fpeople/put/200/application%2Fjson/schema/example/default-example/object_1/scalar_6",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "https://domain.com/profile/pawel.psztyc"
                            }
                          }
                        },
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#257/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#257",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#255"
                          }
                        }
                      },
                      "doc:reference-id": {
                        "@id": "amf://id#150"
                      },
                      "shacl:closed": false,
                      "shacl:name": "schema",
                      "shacl:property": [
                        {
                          "@id": "amf://id#259",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#260",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Id Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#261",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "id"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "id",
                          "shacl:path": {
                            "@id": "data:id"
                          }
                        },
                        {
                          "@id": "amf://id#262",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#263",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Name Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#264",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "name"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "name",
                          "shacl:path": {
                            "@id": "data:name"
                          }
                        },
                        {
                          "@id": "amf://id#265",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#266",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Birthday Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#267",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "birthday"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "birthday",
                          "shacl:path": {
                            "@id": "data:birthday"
                          }
                        },
                        {
                          "@id": "amf://id#268",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#269",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Gender Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#270",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "gender"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "gender",
                          "shacl:path": {
                            "@id": "data:gender"
                          }
                        },
                        {
                          "@id": "amf://id#271",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#272",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Url Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#273",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "url"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "url",
                          "shacl:path": {
                            "@id": "data:url"
                          }
                        },
                        {
                          "@id": "amf://id#274",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#275",
                            "@type": [
                              "shacl:NodeShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:closed": false,
                            "shacl:name": "image",
                            "shacl:property": [
                              {
                                "@id": "amf://id#276",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#277",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "schema-org:name": "The Url Schema ",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:defaultValue": {
                                    "@id": "amf://id#278",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": ""
                                    }
                                  },
                                  "shacl:defaultValueStr": "\"\"",
                                  "shacl:name": "url"
                                },
                                "shacl:minCount": 0,
                                "shacl:name": "url",
                                "shacl:path": {
                                  "@id": "data:url"
                                }
                              },
                              {
                                "@id": "amf://id#279",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#280",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "schema-org:name": "The Thumb Schema ",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:defaultValue": {
                                    "@id": "amf://id#281",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": ""
                                    }
                                  },
                                  "shacl:defaultValueStr": "\"\"",
                                  "shacl:name": "thumb"
                                },
                                "shacl:minCount": 0,
                                "shacl:name": "thumb",
                                "shacl:path": {
                                  "@id": "data:thumb"
                                }
                              }
                            ]
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "image",
                          "shacl:path": {
                            "@id": "data:image"
                          }
                        },
                        {
                          "@id": "amf://id#282",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#283",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Tagline Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#284",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "tagline"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "tagline",
                          "shacl:path": {
                            "@id": "data:tagline"
                          }
                        },
                        {
                          "@id": "amf://id#285",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#286",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Language Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#287",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "language"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "language",
                          "shacl:path": {
                            "@id": "data:language"
                          }
                        },
                        {
                          "@id": "amf://id#288",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#289",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:name": "The Etag Schema ",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#290",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": ""
                              }
                            },
                            "shacl:defaultValueStr": "\"\"",
                            "shacl:name": "etag"
                          },
                          "shacl:minCount": 0,
                          "shacl:name": "etag",
                          "shacl:path": {
                            "@id": "data:etag"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#291",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#292",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#293",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:reference-id": {
                          "@id": "amf://id#156"
                        },
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#293/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#293",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#291"
                          }
                        }
                      },
                      "doc:reference-id": {
                        "@id": "amf://id#115"
                      },
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema"
                    }
                  }
                ],
                "schema-org:description": "Success response for the body\n",
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              },
              {
                "@id": "amf://id#296",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#297",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#298",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A response that is errored",
                      "schema-org:name": "Invalid request",
                      "shacl:closed": false,
                      "shacl:name": "ErrorResource",
                      "shacl:property": [
                        {
                          "@id": "amf://id#86",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#87",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#89",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#90",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "shacl:raw": "true"
                            },
                            "schema-org:description": "Indicate that the response is errored.",
                            "shacl:datatype": {
                              "@id": "xsd:boolean"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#88",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:defaultValueStr": "true",
                            "shacl:name": "error"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "error",
                          "shacl:path": {
                            "@id": "data:error"
                          }
                        },
                        {
                          "@id": "amf://id#91",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#92",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:description": "The error message associated with the error.",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:name": "message"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "message",
                          "shacl:path": {
                            "@id": "data:message"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#300",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#301",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#302",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#302/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#302",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#303"
                          }
                        },
                        "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                      },
                      "schema-org:name": "Invalid request",
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema",
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                ],
                "schema-org:description": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data.",
                "schema-org:name": "400",
                "hydra:statusCode": "400"
              }
            ]
          }
        ]
      },
      {
        "@id": "amf://id#304",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/products",
        "schema-org:description": "The API is to be used to access data about the products.",
        "schema-org:name": "Products",
        "hydra:supportedOperation": {
          "@id": "amf://id#305",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:name": "Create product",
          "hydra:method": "post",
          "hydra:returns": [
            {
              "@id": "amf://id#306",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": [
                {
                  "@id": "amf://id#76",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#49/linked_1",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-label": "Product",
                    "doc:link-target": {
                      "@id": "amf://id#49"
                    }
                  }
                },
                {
                  "@id": "amf://id#307",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/xml",
                  "raml-http:schema": {
                    "@id": "amf://id#308",
                    "@type": [
                      "shacl:SchemaShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#309",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:reference-id": {
                        "@id": "amf://id#212"
                      },
                      "doc:strict": true,
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#309/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#309",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#307"
                        }
                      }
                    },
                    "doc:reference-id": {
                      "@id": "amf://id#210"
                    },
                    "shacl:mediaType": "application/xml",
                    "shacl:name": "schema"
                  }
                }
              ],
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#310",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:description": "The request has been rejected. Probably the product already exists in the datastore.",
              "schema-org:name": "400",
              "hydra:statusCode": "400"
            }
          ]
        }
      },
      {
        "@id": "amf://id#311",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#84",
          "@type": [
            "doc:ParametrizedResourceType",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#97",
            "@type": [
              "doc:ResourceType",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#98",
              "@type": "data:Object",
              "data:get": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2",
                "@type": "data:Object",
                "data:responses": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3",
                  "@type": "data:Object",
                  "data:404": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Not found response"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ErrorResource"
                          }
                        }
                      },
                      "data:application%2Fxml": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Not found response"
                          }
                        },
                        "data:example": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "schema-org:name": "ResourceNotFound"
          },
          "schema-org:name": "ResourceNotFound"
        },
        "raml-http:parameter": {
          "@id": "amf://id#332",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "orgId",
          "raml-http:schema": {
            "@id": "amf://id#333",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "orgId"
          },
          "schema-org:name": "orgId",
          "hydra:required": true
        },
        "raml-http:path": "/{orgId}",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#312",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "schema-org:name": "Get organization",
            "hydra:method": "get",
            "hydra:returns": [
              {
                "@id": "amf://id#313",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": {
                  "@id": "amf://id#314",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#315",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#316",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#317",
                        "@type": "data:Object",
                        "data:Head": {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9",
                          "@type": "data:Object",
                          "data:firstname": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/scalar_10",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "nico"
                            }
                          },
                          "data:kind": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/scalar_12",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "AcmeManager"
                            }
                          },
                          "data:lastname": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/scalar_11",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "ark"
                            }
                          },
                          "data:phone": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/scalar_18",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "123-23"
                            }
                          },
                          "data:reports": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13",
                            "@type": [
                              "data:Array",
                              "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                            ],
                            "data:pos0": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13/object_14"
                            },
                            "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13/object_14",
                              "@type": "data:Object",
                              "data:firstname": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13/object_14/scalar_15",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "nico"
                                }
                              },
                              "data:kind": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13/object_14/scalar_17",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "admin"
                                }
                              },
                              "data:lastname": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_9/array_13/object_14/scalar_16",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "ark"
                                }
                              }
                            }
                          }
                        },
                        "data:id": {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/scalar_2",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "12345"
                          }
                        },
                        "data:onCall": {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3",
                          "@type": "data:Object",
                          "data:clearanceLevel": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3/scalar_7",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "low"
                            }
                          },
                          "data:firstname": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3/scalar_4",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "nico"
                            }
                          },
                          "data:kind": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3/scalar_6",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "AcmeAdmin"
                            }
                          },
                          "data:lastname": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3/scalar_5",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "ark"
                            }
                          },
                          "data:phone": {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2F%7BorgId%7D/get/200/application%2Fjson/schema/example/default-example/object_1/object_3/scalar_8",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "12321"
                            }
                          }
                        }
                      },
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#316/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#316",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#314"
                        }
                      },
                      "shacl:raw": "              id: \"12345\"\n              onCall:\n                firstname: nico\n                lastname: ark\n                kind: AcmeAdmin\n                clearanceLevel: low\n                phone: \"12321\"\n              Head:\n                firstname: nico\n                lastname: ark\n                kind: AcmeManager\n                reports:\n                  -\n                    firstname: nico\n                    lastname: ark\n                    kind: admin\n                phone: \"123-23\"\n"
                    },
                    "schema-org:description": "Represents an organization unit.",
                    "shacl:closed": false,
                    "shacl:name": "Org",
                    "shacl:property": [
                      {
                        "@id": "amf://id#318",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#319",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "UUID generated ID",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "id"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "id",
                        "shacl:path": {
                          "@id": "data:id"
                        }
                      },
                      {
                        "@id": "amf://id#206",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#177/linked_1",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "doc:link-label": "Manager",
                          "doc:link-target": {
                            "@id": "amf://id#177"
                          }
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "Head",
                        "shacl:path": {
                          "@id": "data:Head"
                        }
                      },
                      {
                        "@id": "amf://id#205",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#176/linked_2",
                          "@type": [
                            "raml-shapes:UnionShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "doc:link-label": "Alertable",
                          "doc:link-target": {
                            "@id": "amf://id#176"
                          }
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "onCall",
                        "shacl:path": {
                          "@id": "data:onCall"
                        }
                      }
                    ]
                  }
                },
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              },
              {
                "@id": "amf://id#321",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#322",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#323",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A response that is errored",
                      "schema-org:name": "Not found response",
                      "shacl:closed": false,
                      "shacl:name": "ErrorResource",
                      "shacl:property": [
                        {
                          "@id": "amf://id#86",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#87",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#89",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#90",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "shacl:raw": "true"
                            },
                            "schema-org:description": "Indicate that the response is errored.",
                            "shacl:datatype": {
                              "@id": "xsd:boolean"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#88",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:defaultValueStr": "true",
                            "shacl:name": "error"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "error",
                          "shacl:path": {
                            "@id": "data:error"
                          }
                        },
                        {
                          "@id": "amf://id#91",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#92",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:description": "The error message associated with the error.",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:name": "message"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "message",
                          "shacl:path": {
                            "@id": "data:message"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#325",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#326",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#327",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#327/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#327",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#328"
                          }
                        },
                        "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                      },
                      "schema-org:name": "Not found response",
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema",
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                ],
                "schema-org:name": "404",
                "hydra:statusCode": "404"
              }
            ]
          },
          {
            "@id": "amf://id#329",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "put",
            "hydra:returns": {
              "@id": "amf://id#330",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": {
                "@id": "amf://id#331",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#204/linked_4",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Org",
                  "doc:link-target": {
                    "@id": "amf://id#204"
                  }
                }
              },
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            }
          }
        ]
      },
      {
        "@id": "amf://id#334",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#339",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "orgId",
          "raml-http:schema": {
            "@id": "amf://id#340",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "orgId"
          },
          "schema-org:name": "orgId",
          "hydra:required": true
        },
        "raml-http:path": "/{orgId}/managers",
        "hydra:supportedOperation": {
          "@id": "amf://id#335",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get",
          "hydra:returns": {
            "@id": "amf://id#336",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#337",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#338/linked_1",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "amf_inline_type_1",
                "doc:link-target": {
                  "@id": "amf://id#338"
                }
              }
            },
            "schema-org:name": "200",
            "hydra:statusCode": "200"
          }
        }
      },
      {
        "@id": "amf://id#341",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "doc:extends": {
          "@id": "amf://id#85",
          "@type": [
            "doc:ParametrizedResourceType",
            "doc:ParametrizedDeclaration",
            "doc:DomainElement"
          ],
          "doc:target": {
            "@id": "amf://id#100",
            "@type": [
              "doc:ResourceType",
              "doc:AbstractDeclaration",
              "doc:DomainElement"
            ],
            "doc:dataNode": {
              "@id": "amf://id#101",
              "@type": "data:Object",
              "data:get": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2",
                "@type": "data:Object",
                "data:responses": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3",
                  "@type": "data:Object",
                  "data:404": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_7",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Unauthorized response"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_6/scalar_8",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ErrorResource"
                          }
                        }
                      },
                      "data:application%2Fxml": {
                        "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_10",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Unauthorized response"
                          }
                        },
                        "data:example": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_12",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_2/object_3/object_4/object_5/object_9/scalar_11",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "schema-org:name": "UnauthorizedResponse"
          },
          "schema-org:name": "UnauthorizedResponse"
        },
        "raml-http:path": "/messages",
        "hydra:supportedOperation": [
          {
            "@id": "amf://id#342",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "doc:extends": {
              "@id": "amf://id#343",
              "@type": [
                "doc:ParametrizedTrait",
                "doc:ParametrizedDeclaration",
                "doc:DomainElement"
              ],
              "doc:target": {
                "@id": "amf://id#108",
                "@type": [
                  "doc:Trait",
                  "doc:AbstractDeclaration",
                  "doc:DomainElement"
                ],
                "doc:dataNode": {
                  "@id": "amf://id#109",
                  "@type": "data:Object",
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Use this to mark a resource that can be changed only by users with admin level."
                    }
                  },
                  "data:responses": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
                    "@type": "data:Object",
                    "data:200": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
                      "@type": "data:Object",
                      "data:headers": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                        "@type": "data:Object",
                        "data:X-Amin-Resource": {
                          "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                          "@type": "data:Object",
                          "data:default": {
                            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:boolean",
                              "@value": "false"
                            }
                          },
                          "data:description": {
                            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "This header is not set if the resource can be changed by non-admin users."
                            }
                          },
                          "data:displayName": {
                            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Admin resource mark header"
                            }
                          },
                          "data:type": {
                            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "data:401": {
                      "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                        }
                      }
                    }
                  }
                },
                "schema-org:name": "trait"
              },
              "schema-org:name": "Adminable"
            },
            "schema-org:description": "Create a new message",
            "hydra:method": "post",
            "hydra:returns": [
              {
                "@id": "amf://id#344",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:header": {
                  "@id": "amf://id#345",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "header",
                  "raml-http:paramName": "X-Amin-Resource",
                  "raml-http:schema": {
                    "@id": "amf://id#346",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                    "schema-org:name": "Admin resource mark header",
                    "shacl:datatype": {
                      "@id": "xsd:boolean"
                    },
                    "shacl:defaultValue": {
                      "@id": "amf://id#347",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "shacl:defaultValueStr": "false",
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "This header is not set if the resource can be changed by non-admin users.",
                  "schema-org:name": "X-Amin-Resource",
                  "hydra:required": true
                },
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              },
              {
                "@id": "amf://id#348",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "schema-org:description": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n",
                "schema-org:name": "401",
                "hydra:statusCode": "401"
              }
            ]
          },
          {
            "@id": "amf://id#349",
            "@type": [
              "hydra:Operation",
              "doc:DomainElement"
            ],
            "hydra:method": "get",
            "hydra:returns": [
              {
                "@id": "amf://id#350",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": {
                  "@id": "amf://id#351",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#352",
                    "@type": [
                      "raml-shapes:ArrayShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#353",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:reference-id": {
                        "@id": "amf://id#158"
                      },
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#354",
                        "@type": [
                          "data:Array",
                          "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                        ],
                        "data:pos0": {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2"
                        },
                        "data:pos1": {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11"
                        },
                        "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
                          {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2",
                            "@type": "data:Object",
                            "data:attachements": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/array_9",
                              "@type": [
                                "data:Array",
                                "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                              ],
                              "data:pos0": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/array_9/scalar_10"
                              },
                              "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/array_9/scalar_10",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33"
                                }
                              }
                            },
                            "data:from": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/object_3",
                              "@type": "data:Object",
                              "data:email": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/object_3/scalar_6",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com"
                                }
                              },
                              "data:name": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/object_3/scalar_5",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "Pawel Psztyc"
                                }
                              },
                              "data:uid": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/object_3/scalar_4",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "a7917e3c-4abf-11e7-a919-92ebcb67fe33"
                                }
                              }
                            },
                            "data:message": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_7",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "This is an example message. Hello."
                              }
                            },
                            "data:timestamp": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_2/scalar_8",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:integer",
                                "@value": "1496757380"
                              }
                            }
                          },
                          {
                            "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11",
                            "@type": "data:Object",
                            "data:from": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/object_12",
                              "@type": "data:Object",
                              "data:email": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/object_12/scalar_15",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com"
                                }
                              },
                              "data:name": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/object_12/scalar_14",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "John Doe"
                                }
                              },
                              "data:uid": {
                                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/object_12/scalar_13",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "15e64d90-4ac0-11e7-a919-92ebcb67fe33"
                                }
                              }
                            },
                            "data:message": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/scalar_16",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Howdy?"
                              }
                            },
                            "data:timestamp": {
                              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fmessages/get/200/application%2Fjson/array/schema/example/default-example/array_1/object_11/scalar_17",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:integer",
                                "@value": "1496757498"
                              }
                            }
                          }
                        ]
                      },
                      "http://a.ml/vocabularies/document-source-maps#sources": {
                        "@id": "amf://id#353/source-map",
                        "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                        "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                          "http://a.ml/vocabularies/document-source-maps#element": "amf://id#353",
                          "http://a.ml/vocabularies/document-source-maps#value": "amf://id#351"
                        }
                      }
                    },
                    "raml-shapes:items": {
                      "@id": "amf://id#122/linked_2",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:link-label": "amf_inline_type_2",
                      "doc:link-target": {
                        "@id": "amf://id#122"
                      }
                    },
                    "shacl:name": "schema"
                  }
                },
                "schema-org:name": "200",
                "hydra:statusCode": "200"
              },
              {
                "@id": "amf://id#355",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": [
                  {
                    "@id": "amf://id#356",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#357",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "A response that is errored",
                      "schema-org:name": "Unauthorized response",
                      "shacl:closed": false,
                      "shacl:name": "ErrorResource",
                      "shacl:property": [
                        {
                          "@id": "amf://id#86",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#87",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#89",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#90",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "true"
                                }
                              },
                              "shacl:raw": "true"
                            },
                            "schema-org:description": "Indicate that the response is errored.",
                            "shacl:datatype": {
                              "@id": "xsd:boolean"
                            },
                            "shacl:defaultValue": {
                              "@id": "amf://id#88",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "shacl:defaultValueStr": "true",
                            "shacl:name": "error"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "error",
                          "shacl:path": {
                            "@id": "data:error"
                          }
                        },
                        {
                          "@id": "amf://id#91",
                          "@type": [
                            "shacl:PropertyShape",
                            "shacl:Shape",
                            "raml-shapes:Shape"
                          ],
                          "raml-shapes:range": {
                            "@id": "amf://id#92",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "schema-org:description": "The error message associated with the error.",
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            },
                            "shacl:name": "message"
                          },
                          "shacl:minCount": 1,
                          "shacl:name": "message",
                          "shacl:path": {
                            "@id": "data:message"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "@id": "amf://id#359",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/xml",
                    "raml-http:schema": {
                      "@id": "amf://id#360",
                      "@type": [
                        "shacl:SchemaShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#361",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "http://a.ml/vocabularies/document-source-maps#sources": {
                          "@id": "amf://id#361/source-map",
                          "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                          "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                            "http://a.ml/vocabularies/document-source-maps#element": "amf://id#361",
                            "http://a.ml/vocabularies/document-source-maps#value": "amf://id#362"
                          }
                        },
                        "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
                      },
                      "schema-org:name": "Unauthorized response",
                      "shacl:mediaType": "application/xml",
                      "shacl:name": "schema",
                      "shacl:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                ],
                "schema-org:name": "404",
                "hydra:statusCode": "404"
              }
            ]
          }
        ]
      },
      {
        "@id": "amf://id#363",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/arrayBody",
        "hydra:supportedOperation": {
          "@id": "amf://id#364",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get",
          "hydra:returns": {
            "@id": "amf://id#365",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#366",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#367/linked_1",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "amf_inline_type_3",
                "doc:link-target": {
                  "@id": "amf://id#367"
                }
              }
            },
            "schema-org:name": "200",
            "hydra:statusCode": "200"
          }
        }
      },
      {
        "@id": "amf://id#368",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/schemaBody",
        "hydra:supportedOperation": {
          "@id": "amf://id#369",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get",
          "hydra:returns": {
            "@id": "amf://id#370",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#371",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#372",
                "@type": [
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "doc:examples": {
                  "@id": "amf://id#373",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#374",
                    "@type": "data:Object",
                    "data:status": {
                      "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2FschemaBody/get/200/application%2Fjson/any/schema/example/default-example/object_1/scalar_2",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "success"
                      }
                    }
                  },
                  "http://a.ml/vocabularies/document-source-maps#sources": {
                    "@id": "amf://id#373/source-map",
                    "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                    "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                      "http://a.ml/vocabularies/document-source-maps#element": "amf://id#373",
                      "http://a.ml/vocabularies/document-source-maps#value": "amf://id#371"
                    }
                  },
                  "shacl:raw": "{\n\"status\":\"success\"\n}\n"
                },
                "shacl:name": "schema"
              }
            },
            "schema-org:name": "200",
            "hydra:statusCode": "200"
          }
        }
      },
      {
        "@id": "amf://id#375",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/no-desc",
        "hydra:supportedOperation": {
          "@id": "amf://id#376",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:method": "get",
          "hydra:returns": [
            {
              "@id": "amf://id#377",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#378",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "405",
              "hydra:statusCode": "405"
            },
            {
              "@id": "amf://id#379",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "schema-org:name": "201",
              "hydra:statusCode": "201"
            }
          ]
        }
      }
    ],
    "raml-http:server": {
      "@id": "amf://id#380",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://api.domain.com/"
    },
    "schema-org:name": "API body demo",
    "schema-org:version": "v1"
  },
  "doc:references": [
    {
      "@id": "amf://id#112",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#113",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "{\n  \"id\": \"R34fg663H9KW9MMSKISI\",\n  \"name\": \"Pawel Psztyc\",\n  \"birthday\": \"1983-10-20\",\n  \"gender\": \"male\",\n  \"url\": \"https://domain.com/profile/pawel.psztyc\",\n  \"image\": {\n    \"url\": \"https://domain.com/profile/pawel.psztyc/image\",\n    \"thumb\": \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n  },\n  \"tagline\": \"Some text about me.\",\n  \"language\": \"en_GB\",\n  \"etag\": \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n}\n",
        "raml-http:mediaType": "application/json"
      }
    },
    {
      "@id": "amf://id#114",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#115",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"birthday\" type=\"xs:date\"></xs:element>\n        <xs:element name=\"gender\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"image\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n              <xs:element name=\"thumb\" type=\"xs:string\"></xs:element>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n        <xs:element name=\"tagline\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"language\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\" use=\"required\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#116",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#117",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#118",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#119",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#120",
      "@type": [
        "doc:TraitFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#108",
        "@type": [
          "doc:Trait",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "doc:dataNode": {
          "@id": "amf://id#109",
          "@type": "data:Object",
          "data:description": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Use this to mark a resource that can be changed only by users with admin level."
            }
          },
          "data:responses": {
            "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3",
            "@type": "data:Object",
            "data:200": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4",
              "@type": "data:Object",
              "data:headers": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5",
                "@type": "data:Object",
                "data:X-Amin-Resource": {
                  "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6",
                  "@type": "data:Object",
                  "data:default": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "false"
                    }
                  },
                  "data:description": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "This header is not set if the resource can be changed by non-admin users."
                    }
                  },
                  "data:displayName": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Admin resource mark header"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_4/object_5/object_6/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "boolean"
                    }
                  }
                }
              }
            },
            "data:401": {
              "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11",
              "@type": "data:Object",
              "data:description": {
                "@id": "file://demo/demo-api/traits/adminable.raml#/trait/object_1/object_3/object_11/scalar_12",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The 401 response will be returned when trying to update the resource with\nnon-admin clerance level. Resources that requires admin privileges are marked with\n`X-Admin-Resource` header when getting the resource.\n"
                }
              }
            }
          }
        },
        "schema-org:name": "trait"
      },
      "doc:usage": "Some resources can be changed only by users with Admin clerance level. This resources will be\nmarked with the header `X-Admin-Resource` when requesting it. It means that every attemp to\nupdate the resource by non-admin user will result with 401 response.\n"
    },
    {
      "@id": "amf://id#121",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#122",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "An user message object.",
        "shacl:closed": false,
        "shacl:name": "amf_inline_type_2",
        "shacl:property": [
          {
            "@id": "amf://id#123",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#124",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Object representing sender of the message.",
              "shacl:closed": false,
              "shacl:name": "from",
              "shacl:property": [
                {
                  "@id": "amf://id#125",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#126",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "User ID.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "uid"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "uid",
                  "shacl:path": {
                    "@id": "data:uid"
                  }
                },
                {
                  "@id": "amf://id#127",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#128",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "User full name",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "name"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "name",
                  "shacl:path": {
                    "@id": "data:name"
                  }
                },
                {
                  "@id": "amf://id#129",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#130",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "User emaill address to be used to return the message. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "email"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "email",
                  "shacl:path": {
                    "@id": "data:email"
                  }
                }
              ]
            },
            "shacl:minCount": 0,
            "shacl:name": "from",
            "shacl:path": {
              "@id": "data:from"
            }
          },
          {
            "@id": "amf://id#131",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#132",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Message body",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "message"
            },
            "shacl:minCount": 1,
            "shacl:name": "message",
            "shacl:path": {
              "@id": "data:message"
            }
          },
          {
            "@id": "amf://id#133",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#134",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Message sent timestamp as a Uxin timestamp.",
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "timestamp"
            },
            "shacl:minCount": 1,
            "shacl:name": "timestamp",
            "shacl:path": {
              "@id": "data:timestamp"
            }
          },
          {
            "@id": "amf://id#135",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#136",
              "@type": [
                "raml-shapes:ArrayShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "raml-shapes:items": {
                "@id": "amf://id#137",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              "schema-org:description": "List of URLs to the attachments",
              "shacl:name": "attachements"
            },
            "shacl:minCount": 0,
            "shacl:name": "attachements",
            "shacl:path": {
              "@id": "data:attachements"
            }
          },
          {
            "@id": "amf://id#139",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#140",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "True if the message should be marked as an important.",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:name": "important"
            },
            "shacl:minCount": 0,
            "shacl:name": "important",
            "shacl:path": {
              "@id": "data:important"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#142",
      "@type": [
        "doc:TraitFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#16",
        "@type": [
          "doc:Trait",
          "doc:AbstractDeclaration",
          "doc:DomainElement"
        ],
        "doc:dataNode": {
          "@id": "amf://id#106",
          "@type": "data:Object",
          "data:description": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "The collection of <<resourcePathName>>."
            }
          },
          "data:responses": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
            "@type": "data:Object",
            "data:200": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7",
                  "@type": "data:Object",
                  "data:properties": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9",
                    "@type": "data:Object",
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_13",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Contains a list of objects for this method."
                        }
                      },
                      "data:items": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_14",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "<<resourceType>>"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_12",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_10/scalar_11",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "array"
                        }
                      }
                    },
                    "data:nextPageToken": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_19",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_18",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_17",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/object_9/object_15/scalar_16",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "string"
                        }
                      }
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/object_6/object_7/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "object"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
                }
              }
            },
            "data:400": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_24",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid"
                    }
                  },
                  "data:properties": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26",
                    "@type": "data:Object",
                    "data:error": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_31",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Indicate that the response is errored."
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_30",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_29",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_27/scalar_28",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "boolean"
                        }
                      }
                    },
                    "data:message": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32",
                      "@type": "data:Object",
                      "data:description": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_34",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The error message associated with the error."
                        }
                      },
                      "data:example": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_35",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                        }
                      },
                      "data:required": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_36",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:type": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/object_26/object_32/scalar_33",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "string"
                        }
                      }
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/object_22/object_23/scalar_25",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "object"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_20/scalar_21",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
                }
              }
            }
          }
        },
        "doc:variable": [
          "resourceType",
          "resourcePathName"
        ],
        "schema-org:name": "trait"
      },
      "doc:usage": "This trait is to be used when the resource is paginated that is the edpoint producses\na list of resources in the response.\nEvery paginated response contains a `nextPageToken` property that should be used in pagination\nto request for next page of the results and `items` which is a list of resources.\nThe `items` property is always defined, even if the response is empty. Therefore the `404`\nresponse in this case is not possible. Clients need to handle empty responses by their own.\nIt is crutial that the subsequent requests contain the same set of parameters (like `limit`\nor `start`) because if this values will change then the `nextPageToken` will be revalidated\nand pagination will start from the first page.\n"
    },
    {
      "@id": "amf://id#143",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#144",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#145",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#49",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": [
          {
            "@id": "amf://id#72",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#73",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W\\d3deef3rgrgf4r"
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme Product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "200"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123456789101"
                }
              }
            },
            "schema-org:name": "example_0",
            "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\sd3deef3rgrgf4r\"\n"
          },
          {
            "@id": "amf://id#74",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#75",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W/\"686897696a7c876b7e\""
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "d697f5cea85011e680f576304dec7eb7"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Super product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "125"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/Product/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123456789101"
                }
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#74/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#74",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#76"
              }
            },
            "schema-org:name": "Product",
            "shacl:raw": "\n                id: d697f5cea85011e680f576304dec7eb7\n                name: Super product\n                quantity: 125\n                unit: ml\n                upc: \"123456789101\"\n                available: true\n                etag: \"W/\\\"686897696a7c876b7e\\\"\"\n"
          },
          {
            "@id": "amf://id#77",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#78",
              "@type": "data:Object",
              "data:available": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_7",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "data:etag": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "W/\"123456789\""
                }
              },
              "data:id": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "123e4567e89b12d3a456426655440000"
                }
              },
              "data:name": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme Product"
                }
              },
              "data:quantity": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1"
                }
              },
              "data:unit": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "kg"
                }
              },
              "data:upc": {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Fproducts/post/200/application%2Fjson/schema/example/OtherProduct/object_1/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "223456789101"
                }
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#77/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#77",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#76"
              }
            },
            "schema-org:name": "OtherProduct",
            "shacl:raw": "\n                id: 123e4567e89b12d3a456426655440000\n                name: Acme Product\n                quantity: 1\n                unit: kg\n                upc: \"223456789101\"\n                available: true\n                etag: \"W/\\\"123456789\\\"\"\n"
          }
        ],
        "schema-org:description": "A single product representing an item in the store.",
        "schema-org:name": "A product resource",
        "shacl:closed": false,
        "shacl:name": "Product",
        "shacl:property": [
          {
            "@id": "amf://id#50",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#51",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#52",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#53",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "042100005264"
                  }
                },
                "shacl:raw": "042100005264"
              },
              "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "upc",
              "shacl:pattern": "^[0-9]{12,12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "upc",
            "shacl:path": {
              "@id": "data:upc"
            }
          },
          {
            "@id": "amf://id#18",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#19",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#54",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#55",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#56",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#57",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Acme product - mentol flavor, 500 ml."
                  }
                },
                "shacl:raw": "Acme product - mentol flavor, 500 ml."
              },
              "schema-org:description": "Product name",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#58",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#59",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id",
              "shacl:pattern": "^[0-9a-zA-Z-]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#60",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#61",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#62",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#63",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "ml"
                  }
                },
                "shacl:raw": "ml"
              },
              "schema-org:description": "The unit of measuremet for the quantity property.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "unit"
            },
            "shacl:minCount": 1,
            "shacl:name": "unit",
            "shacl:path": {
              "@id": "data:unit"
            }
          },
          {
            "@id": "amf://id#64",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#65",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#66",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#67",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "shacl:raw": "true"
              },
              "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:name": "available"
            },
            "shacl:minCount": 1,
            "shacl:name": "available",
            "shacl:path": {
              "@id": "data:available"
            }
          },
          {
            "@id": "amf://id#68",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#69",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#70",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#71",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "500"
                  }
                },
                "shacl:raw": "500"
              },
              "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "quantity"
            },
            "shacl:minCount": 1,
            "shacl:name": "quantity",
            "shacl:path": {
              "@id": "data:quantity"
            }
          }
        ]
      },
      "doc:references": {
        "@id": "amf://id#146",
        "@type": [
          "doc:DataType",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": {
          "@id": "amf://id#147",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Common properties for all resources returned by the API.\n",
          "shacl:closed": false,
          "shacl:name": "type",
          "shacl:property": {
            "@id": "amf://id#18",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#19",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          }
        }
      }
    },
    {
      "@id": "amf://id#149",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#150",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "{\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": \"object\",\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": \"string\",\n      \"title\": \"The Id Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"R34fg663H9KW9MMSKISI\"\n      ]\n    },\n    \"name\": {\n      \"$id\": \"/properties/name\",\n      \"type\": \"string\",\n      \"title\": \"The Name Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Pawel Psztyc\"\n      ]\n    },\n    \"birthday\": {\n      \"$id\": \"/properties/birthday\",\n      \"type\": \"string\",\n      \"title\": \"The Birthday Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"1983-10-20\"\n      ]\n    },\n    \"gender\": {\n      \"$id\": \"/properties/gender\",\n      \"type\": \"string\",\n      \"title\": \"The Gender Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"male\"\n      ]\n    },\n    \"url\": {\n      \"$id\": \"/properties/url\",\n      \"type\": \"string\",\n      \"title\": \"The Url Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"https://domain.com/profile/pawel.psztyc\"\n      ]\n    },\n    \"image\": {\n      \"$id\": \"/properties/image\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"url\": {\n          \"$id\": \"/properties/image/properties/url\",\n          \"type\": \"string\",\n          \"title\": \"The Url Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image\"\n          ]\n        },\n        \"thumb\": {\n          \"$id\": \"/properties/image/properties/thumb\",\n          \"type\": \"string\",\n          \"title\": \"The Thumb Schema \",\n          \"default\": \"\",\n          \"examples\": [\n            \"https://domain.com/profile/pawel.psztyc/image/thumb\"\n          ]\n        }\n      }\n    },\n    \"tagline\": {\n      \"$id\": \"/properties/tagline\",\n      \"type\": \"string\",\n      \"title\": \"The Tagline Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Some text about me.\"\n      ]\n    },\n    \"language\": {\n      \"$id\": \"/properties/language\",\n      \"type\": \"string\",\n      \"title\": \"The Language Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"en_GB\"\n      ]\n    },\n    \"etag\": {\n      \"$id\": \"/properties/etag\",\n      \"type\": \"string\",\n      \"title\": \"The Etag Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n      ]\n    }\n  }\n}\n",
        "raml-http:mediaType": "application/json"
      }
    },
    {
      "@id": "amf://id#151",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#152",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#153",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#14",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#15",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#17",
            "@type": "data:Object",
            "data:birthday": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "1983-10-20"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
              }
            },
            "data:gender": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "male"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "R34fg663H9KW9MMSKISI"
              }
            },
            "data:image": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
              "@type": "data:Object",
              "data:thumb": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                }
              },
              "data:url": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                }
              }
            },
            "data:language": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "en_GB"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Pawel Psztyc"
              }
            },
            "data:tagline": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Some text about me."
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc"
              }
            }
          },
          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISI\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n"
        },
        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
        "schema-org:name": "A person resource",
        "shacl:closed": false,
        "shacl:name": "AppPerson",
        "shacl:property": [
          {
            "@id": "amf://id#18",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#19",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#20",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#21",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The brief description (tagline) of this person.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "tagline"
            },
            "shacl:minCount": 1,
            "shacl:name": "tagline",
            "shacl:path": {
              "@id": "data:tagline"
            }
          },
          {
            "@id": "amf://id#22",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#23",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#24",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#25",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "John Smith"
                  }
                },
                "shacl:raw": "John Smith"
              },
              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name",
              "shacl:pattern": "^[0-9a-zA-Z ]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#26",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#27",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of this person's profile.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#28",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#29",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The user's preferred language for rendering.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "language"
            },
            "shacl:minCount": 1,
            "shacl:name": "language",
            "shacl:path": {
              "@id": "data:language"
            }
          },
          {
            "@id": "amf://id#30",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#31",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#32",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#33",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "birthday"
            },
            "shacl:minCount": 1,
            "shacl:name": "birthday",
            "shacl:path": {
              "@id": "data:birthday"
            }
          },
          {
            "@id": "amf://id#34",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#35/linked_1",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:link-label": "amf_inline_type_4",
              "doc:link-target": {
                "@id": "amf://id#35"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "image",
            "shacl:path": {
              "@id": "data:image"
            }
          },
          {
            "@id": "amf://id#43",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#44",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "gender?"
            },
            "shacl:minCount": 0,
            "shacl:name": "gender",
            "shacl:path": {
              "@id": "data:gender"
            }
          }
        ]
      },
      "doc:references": [
        {
          "@id": "amf://id#154",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#35",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#36",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#37",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#38",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#39",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#40",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#41",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          }
        },
        {
          "@id": "amf://id#146",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#147",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Common properties for all resources returned by the API.\n",
            "shacl:closed": false,
            "shacl:name": "type",
            "shacl:property": {
              "@id": "amf://id#18",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#19",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            }
          }
        }
      ]
    },
    {
      "@id": "amf://id#155",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#156",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"AppPerson\">\n  <id>Qawer63J73HJ6khjswuqyq62382jG21s</id>\n  <name>John Smith</name>\n  <birthday>1990-10-12</birthday>\n  <gender>male</gender>\n  <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s</url>\n  <image>\n    <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image</url>\n    <thumb>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image/thumb</thumb>\n  </image>\n  <tagline>Hi, I'm John!</tagline>\n  <language>en_US</language>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#157",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#158",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "[\n  {\n    \"from\": {\n      \"uid\": \"a7917e3c-4abf-11e7-a919-92ebcb67fe33\",\n      \"name\": \"Pawel Psztyc\",\n      \"email\": \"bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com\"\n    },\n    \"message\": \"This is an example message. Hello.\",\n    \"timestamp\": 1496757380,\n    \"attachements\": [\n      \"https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33\"\n    ]\n  }, {\n    \"from\": {\n      \"uid\": \"15e64d90-4ac0-11e7-a919-92ebcb67fe33\",\n      \"name\": \"John Doe\",\n      \"email\": \"220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com\"\n    },\n    \"message\": \"Howdy?\",\n    \"timestamp\": 1496757498\n  }\n]\n",
        "raml-http:mediaType": "application/json"
      }
    },
    {
      "@id": "amf://id#159",
      "@type": [
        "doc:Module",
        "doc:Unit"
      ],
      "doc:declares": [
        {
          "@id": "amf://id#160",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "Admin",
          "shacl:property": [
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#167",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#168",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#168/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#169",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "low"
                    }
                  },
                  "rdfs:_2": {
                    "@id": "amf://id#170",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "high"
                    }
                  }
                },
                "shacl:name": "clearanceLevel"
              },
              "shacl:minCount": 1,
              "shacl:name": "clearanceLevel",
              "shacl:path": {
                "@id": "data:clearanceLevel"
              }
            },
            {
              "@id": "amf://id#171",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#172",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#172/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#173",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "AcmeAdmin"
                    }
                  }
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        },
        {
          "@id": "amf://id#176",
          "@type": [
            "raml-shapes:UnionShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:anyOf": [
            {
              "@id": "amf://id#177",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:closed": false,
              "shacl:name": "Manager",
              "shacl:property": [
                {
                  "@id": "amf://id#161",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#162",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "lastname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "lastname",
                  "shacl:path": {
                    "@id": "data:lastname"
                  }
                },
                {
                  "@id": "amf://id#163",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#164",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "firstname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "firstname",
                  "shacl:path": {
                    "@id": "data:firstname"
                  }
                },
                {
                  "@id": "amf://id#165",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#166",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "title?"
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "title",
                  "shacl:path": {
                    "@id": "data:title"
                  }
                },
                {
                  "@id": "amf://id#178",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#179",
                    "@type": [
                      "raml-shapes:ArrayShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "raml-shapes:items": {
                      "@id": "amf://id#180/linked_7",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:link-label": "Person",
                      "doc:link-target": {
                        "@id": "amf://id#180"
                      }
                    }
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "reports",
                  "shacl:path": {
                    "@id": "data:reports"
                  }
                },
                {
                  "@id": "amf://id#188",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#189/linked_1",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-label": "Phone",
                    "doc:link-target": {
                      "@id": "amf://id#189"
                    }
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "phone",
                  "shacl:path": {
                    "@id": "data:phone"
                  }
                },
                {
                  "@id": "amf://id#192",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#193",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:in": {
                      "@id": "amf://id#193/list",
                      "@type": "rdfs:Seq",
                      "rdfs:_1": {
                        "@id": "amf://id#194",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "AcmeManager"
                        }
                      }
                    },
                    "shacl:name": "kind"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "kind",
                  "shacl:path": {
                    "@id": "data:kind"
                  }
                }
              ]
            },
            {
              "@id": "amf://id#199",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:closed": false,
              "shacl:name": "AlertableAdmin",
              "shacl:property": [
                {
                  "@id": "amf://id#161",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#162",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "lastname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "lastname",
                  "shacl:path": {
                    "@id": "data:lastname"
                  }
                },
                {
                  "@id": "amf://id#163",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#164",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "firstname"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "firstname",
                  "shacl:path": {
                    "@id": "data:firstname"
                  }
                },
                {
                  "@id": "amf://id#165",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#166",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "title?"
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "title",
                  "shacl:path": {
                    "@id": "data:title"
                  }
                },
                {
                  "@id": "amf://id#167",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#168",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:in": {
                      "@id": "amf://id#168/list",
                      "@type": "rdfs:Seq",
                      "rdfs:_1": {
                        "@id": "amf://id#169",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "low"
                        }
                      },
                      "rdfs:_2": {
                        "@id": "amf://id#170",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "high"
                        }
                      }
                    },
                    "shacl:name": "clearanceLevel"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "clearanceLevel",
                  "shacl:path": {
                    "@id": "data:clearanceLevel"
                  }
                },
                {
                  "@id": "amf://id#200",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#189/linked_1",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:link-label": "Phone",
                    "doc:link-target": {
                      "@id": "amf://id#189"
                    }
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "phone",
                  "shacl:path": {
                    "@id": "data:phone"
                  }
                },
                {
                  "@id": "amf://id#171",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#172",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:in": {
                      "@id": "amf://id#172/list",
                      "@type": "rdfs:Seq",
                      "rdfs:_1": {
                        "@id": "amf://id#173",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "AcmeAdmin"
                        }
                      }
                    },
                    "shacl:name": "kind"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "kind",
                  "shacl:path": {
                    "@id": "data:kind"
                  }
                }
              ]
            }
          ],
          "shacl:name": "Alertable"
        },
        {
          "@id": "amf://id#204",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Represents an organization unit.",
          "shacl:closed": false,
          "shacl:name": "Org",
          "shacl:property": [
            {
              "@id": "amf://id#205",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#176/linked_3",
                "@type": [
                  "raml-shapes:UnionShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "doc:link-label": "Alertable",
                "doc:link-target": {
                  "@id": "amf://id#176"
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "onCall",
              "shacl:path": {
                "@id": "data:onCall"
              }
            },
            {
              "@id": "amf://id#206",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#177/linked_2",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "Manager",
                "doc:link-target": {
                  "@id": "amf://id#177"
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "Head",
              "shacl:path": {
                "@id": "data:Head"
              }
            }
          ]
        },
        {
          "@id": "amf://id#189",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "Phone",
          "shacl:pattern": "^[0-9|-]+$"
        },
        {
          "@id": "amf://id#180",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "doc:examples": {
            "@id": "amf://id#181",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#182",
              "@type": "data:Object",
              "data:firstname": {
                "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Pawel"
                }
              },
              "data:kind": {
                "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_5",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Manager"
                }
              },
              "data:lastname": {
                "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Psztyc"
                }
              },
              "data:title": {
                "@id": "file://demo/demo-api/resourceTypes/example-types.raml#/declarations/types/Person/example/default-example/object_1/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Mr."
                }
              }
            },
            "shacl:raw": "      firstname: Pawel\n      lastname: Psztyc\n      title: Mr.\n      kind: Manager\n"
          },
          "shacl:closed": false,
          "shacl:name": "Person",
          "shacl:property": [
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#183",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#184",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        },
        {
          "@id": "amf://id#177",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "Manager",
          "shacl:property": [
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#178",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#179",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "raml-shapes:items": {
                  "@id": "amf://id#180/linked_8",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Person",
                  "doc:link-target": {
                    "@id": "amf://id#180"
                  }
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "reports",
              "shacl:path": {
                "@id": "data:reports"
              }
            },
            {
              "@id": "amf://id#188",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#189/linked_2",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "Phone",
                "doc:link-target": {
                  "@id": "amf://id#189"
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "phone",
              "shacl:path": {
                "@id": "data:phone"
              }
            },
            {
              "@id": "amf://id#192",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#193",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#193/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#194",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "AcmeManager"
                    }
                  }
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        },
        {
          "@id": "amf://id#199",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:closed": false,
          "shacl:name": "AlertableAdmin",
          "shacl:property": [
            {
              "@id": "amf://id#161",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#162",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "lastname"
              },
              "shacl:minCount": 1,
              "shacl:name": "lastname",
              "shacl:path": {
                "@id": "data:lastname"
              }
            },
            {
              "@id": "amf://id#163",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#164",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "firstname"
              },
              "shacl:minCount": 1,
              "shacl:name": "firstname",
              "shacl:path": {
                "@id": "data:firstname"
              }
            },
            {
              "@id": "amf://id#165",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#166",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "title?"
              },
              "shacl:minCount": 0,
              "shacl:name": "title",
              "shacl:path": {
                "@id": "data:title"
              }
            },
            {
              "@id": "amf://id#167",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#168",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#168/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#169",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "low"
                    }
                  },
                  "rdfs:_2": {
                    "@id": "amf://id#170",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "high"
                    }
                  }
                },
                "shacl:name": "clearanceLevel"
              },
              "shacl:minCount": 1,
              "shacl:name": "clearanceLevel",
              "shacl:path": {
                "@id": "data:clearanceLevel"
              }
            },
            {
              "@id": "amf://id#200",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#189/linked_2",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "Phone",
                "doc:link-target": {
                  "@id": "amf://id#189"
                }
              },
              "shacl:minCount": 1,
              "shacl:name": "phone",
              "shacl:path": {
                "@id": "data:phone"
              }
            },
            {
              "@id": "amf://id#171",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#172",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:in": {
                  "@id": "amf://id#172/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#173",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "AcmeAdmin"
                    }
                  }
                },
                "shacl:name": "kind"
              },
              "shacl:minCount": 1,
              "shacl:name": "kind",
              "shacl:path": {
                "@id": "data:kind"
              }
            }
          ]
        }
      ]
    },
    {
      "@id": "amf://id#209",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#210",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"quantity\" type=\"xs:double\"></xs:element>\n        <xs:element name=\"unit\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"upc\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"available\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:string\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#211",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#212",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"Product\">\n  <id>f2f7933a-a9ce-11e6-80f5-76304dec7eb7</id>\n  <name>Acme product - mentol flavor, 500 ml.</name>\n  <quantity>500</quantity>\n  <unit>ml</unit>\n  <upc>042100005264</upc>\n  <available>true</available>\n</resource>\n"
      }
    }
  ]
}